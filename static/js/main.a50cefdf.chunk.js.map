{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","Components/useFetch.js","Components/utilities/getParam.js","Components/App.js","index.js"],"names":["SearchForm","props","useState","searchText","setSearchText","className","onSubmit","e","preventDefault","onSearch","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","Gif","React","forwardRef","ref","src","url","alt","title","NoGifs","GifList","gifs","data","length","map","gif","idx","image","key","useFetch","query","offset","loading","setLoading","error","setError","setData","hasMore","setHasMore","location","useLocation","sendQuery","useCallback","a","parameterName","search","locationParam","URLSearchParams","get","searchTerm","axios","method","params","q","limit","api_key","process","cancelToken","CancelToken","c","cancel","then","res","prevGifs","Set","images","fixed_height","pagination","total_count","count","catch","isCancel","console","log","useEffect","App","history","useHistory","setQuery","setOffset","observer","useRef","lastGifRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevOffset","observe","newPath","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a50cefdf.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchForm(props) {\n  const [searchText, setSearchText] = useState('');\n\n  const onSearchChange = (e) => setSearchText(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSearch(searchText);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className='search-form' onSubmit={handleSubmit}>\n      <label className='is-hidden' htmlFor='search'>\n        Search\n      </label>\n      <input\n        type='search'\n        onChange={onSearchChange}\n        name='search'\n        placeholder='Find gifs'\n      />\n      <button type='submit' id='submit' className='search-button'>\n        <i className='material-icons icn-search'>search</i>\n      </button>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\n\nconst Gif = React.forwardRef((props, ref) => {\n  return (\n    <li className='gif-wrap'>\n      <img src={props.url} alt={props.title} ref={ref} />\n    </li>\n  );\n});\n\nexport default Gif;\n","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = React.forwardRef(({ data }, ref) => {\n  let gifs;\n  if (data.length) {\n    gifs = data.map((gif, idx) => {\n      if (data.length === idx + 1) {\n        return <Gif ref={ref} url={gif.image} title={gif.title} key={gif.id} />;\n      } else {\n        return <Gif url={gif.image} title={gif.title} key={gif.id} />;\n      }\n    });\n  } else {\n    gifs = <NoGifs />;\n  }\n\n  return <ul className='gif-list'>{gifs}</ul>;\n});\n\nexport default GifList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport getParam from './utilities/getParam';\n\nconst useFetch = (query, offset) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState([]);\n\n  const location = useLocation();\n\n  const sendQuery = useCallback(async () => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    const locationParam = getParam('search', location.search);\n    const searchTerm = locationParam ? locationParam : 'doggo';\n    if (offset === 0) setData([]);\n    axios({\n      method: 'GET',\n      url: 'https://api.giphy.com/v1/gifs/search',\n      params: {\n        q: searchTerm,\n        offset: offset,\n        limit: 24,\n        api_key: `${process.env.REACT_APP_API_KEY}`,\n      },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    })\n      .then((res) => {\n        setData((prevGifs) => {\n          return [\n            ...new Set([\n              ...prevGifs,\n              ...res.data.data.map((gif) => {\n                return {\n                  id: gif.id,\n                  image: gif.images.fixed_height.url,\n                  title: gif.title,\n                };\n              }),\n            ]),\n          ];\n        });\n        setHasMore(\n          res.data.pagination.total_count >\n            res.data.pagination.count + res.data.pagination.offset\n        );\n        setLoading(false);\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        console.log(e);\n        setError(true);\n      });\n    return () => cancel();\n  }, [location, offset]);\n\n  useEffect(() => {\n    sendQuery();\n  }, [location, query, sendQuery, offset]);\n\n  return { loading, error, data, hasMore };\n};\n\nexport default useFetch;\n","export default (parameterName, url) => {\n  const urlParams = new URLSearchParams(url);\n  return urlParams.get(parameterName);\n};","import React, { useState, useRef, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\n\nimport SearchForm from './SearchForm';\nimport GifList from './GifList';\nimport useFetch from './useFetch';\n\nconst App = () => {\n  const history = useHistory();\n\n  const [query, setQuery] = useState('');\n  const [offset, setOffset] = useState(0);\n\n  const { data, hasMore, loading, error } = useFetch(query, offset);\n\n  const observer = useRef();\n  const lastGifRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setOffset((prevOffset) => prevOffset + 24);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  const performSearch = (value) => {\n    setQuery(value);\n    setOffset(0);\n    const newPath = `?search=${value}`;\n    return history.push(newPath);\n  };\n\n  return (\n    <>\n      <header className='main-header'>\n        <div className='inner'>\n          <SearchForm onSearch={performSearch} />\n        </div>\n      </header>\n      <main className='main-content'>\n        <GifList data={data} ref={lastGifRef} />\n        {loading && <p>Loading...</p>}\n        {error && <p>Error</p>}\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}