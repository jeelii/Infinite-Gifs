{"version":3,"sources":["Components/SearchForm.js","Components/SearchHistory.js","Components/Header.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","Components/useFetch.js","Components/App.js","index.js"],"names":["SearchForm","onSearch","useState","searchText","setSearchText","className","onSubmit","e","preventDefault","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","SearchHistory","setOffset","searchHistory","length","map","word","idx","key","to","onClick","Header","performSearch","Gif","React","forwardRef","ref","url","title","src","alt","NoGifs","message","GifList","gifs","data","error","loading","gif","image","useFetch","query","offset","setLoading","setError","errorMessage","setErrorMessage","setData","hasMore","setHasMore","search","useParams","sendQuery","useCallback","a","searchTerm","axios","method","params","q","limit","api_key","process","cancelToken","CancelToken","c","cancel","then","res","prevGifs","images","fixed_height","pagination","total_count","count","catch","isCancel","useEffect","App","history","useHistory","oldSearches","localStorage","getItem","setQuery","split","setSearchHistory","observer","useRef","lastGifRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevOffset","observe","setItem","trimmedSearch","trim","prevHistory","Set","slice","push","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.32e90334.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchForm({ onSearch }) {\n  const [searchText, setSearchText] = useState('');\n\n  const onSearchChange = (e) => setSearchText(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSearch(searchText);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className='search-form' onSubmit={handleSubmit}>\n      <label className='is-hidden' htmlFor='search'>\n        Search\n      </label>\n      <input\n        type='search'\n        onChange={onSearchChange}\n        name='search'\n        placeholder='Find gifs'\n      />\n      <button type='submit' id='submit' className='search-button'>\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SearchHistory = ({ setOffset, searchHistory }) => {\n  return (\n    <div className='history'>\n      {searchHistory.length > 0 && (\n        <>\n          <h2 className='history__title'>Recent searches:</h2>\n          <ul className='history__list'>\n            {searchHistory.map((word, idx) => {\n              return (\n                <li key={idx} className='history__item'>\n                  <Link to={word} onClick={() => setOffset(0)}>\n                    {word}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchHistory;\n","import React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchHistory from './SearchHistory';\nimport './styles/Header.css';\n\nconst Header = ({ performSearch, searchHistory, setOffset }) => {\n  return (\n    <header className='header'>\n      <div className='inner header__inner'>\n        <SearchForm onSearch={performSearch} />\n        <SearchHistory searchHistory={searchHistory} setOffset={setOffset} />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Gif = React.forwardRef(({ url, title }, ref) => {\n  return (\n    <li className='gif-wrap'>\n      <img src={url} alt={title} ref={ref} />\n    </li>\n  );\n});\n\nexport default Gif;\n","import React from 'react';\n\nconst NoGifs = ({ message }) => (\n  <li className='no-gifs'>\n    <h3>{message}</h3>\n  </li>\n);\n\nexport default NoGifs;\n","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = React.forwardRef(({ data, error, loading }, ref) => {\n  let gifs;\n  const noGifsMessage = 'Sorry, no GIFs match your search.';\n  if (data.length) {\n    gifs = data.map((gif, idx) => {\n      if (data.length === idx + 1) {\n        return (\n          <Gif ref={ref} url={gif.image} title={gif.title} key={gif.id + idx} />\n        );\n      } else {\n        return <Gif url={gif.image} title={gif.title} key={gif.id + idx} />;\n      }\n    });\n  } else if (!loading && !error) {\n    gifs = <NoGifs message={noGifsMessage} />;\n  }\n\n  return <ul className='gif-list'>{gifs}</ul>;\n});\n\nexport default GifList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useFetch = (query, offset) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState([]);\n\n  const { search } = useParams();\n\n  const sendQuery = useCallback(async () => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    const searchTerm = search ? search : 'doggo';\n    if (offset === 0) setData([]);\n    axios({\n      method: 'GET',\n      url: 'https://api.giphy.com/v1/gifs/search',\n      params: {\n        q: searchTerm,\n        offset: offset,\n        limit: 50,\n        api_key: `${process.env.REACT_APP_API_KEY}`,\n      },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    })\n      .then((res) => {\n        setData((prevGifs) => {\n          return [\n            ...prevGifs,\n            ...res.data.data.map((gif) => {\n              return {\n                id: gif.id,\n                image: gif.images.fixed_height.url,\n                title: gif.title,\n              };\n            }),\n          ];\n        });\n        setHasMore(\n          res.data.pagination.total_count >\n            res.data.pagination.count + res.data.pagination.offset\n        );\n        setLoading(false);\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        const giphyTooManyReqsMsg = 'Request failed with status code 429';\n        if (e.message === giphyTooManyReqsMsg)\n          setErrorMessage(\n            'Too many gif requests in a short time, sorry. Take a break and come back.'\n          );\n        setError(true);\n      });\n    return () => cancel();\n  }, [search, offset]);\n\n  useEffect(() => {\n    sendQuery();\n  }, [search, query, sendQuery, offset]);\n\n  return { loading, error, errorMessage, data, hasMore };\n};\n\nexport default useFetch;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './styles/App.css';\n\nimport Header from './Header';\nimport GifList from './GifList';\nimport NoGifs from './NoGifs';\n\nimport useFetch from './useFetch';\n\nconst App = () => {\n  const history = useHistory();\n\n  const oldSearches = localStorage.getItem('gifSearches');\n\n  const [query, setQuery] = useState('');\n  const [offset, setOffset] = useState(0);\n  const [searchHistory, setSearchHistory] = useState(\n    oldSearches ? oldSearches.split(',') : []\n  );\n\n  const { data, hasMore, loading, error, errorMessage } = useFetch(\n    query,\n    offset\n  );\n\n  const observer = useRef();\n  const lastGifRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setOffset((prevOffset) => prevOffset + 50);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  useEffect(() => {\n    localStorage.setItem('gifSearches', searchHistory);\n  }, [searchHistory]);\n\n  const performSearch = (value) => {\n    const trimmedSearch = value.trim();\n    if (!trimmedSearch) return;\n    setQuery(trimmedSearch);\n    setOffset(0);\n    setSearchHistory((prevHistory) => {\n      return [...new Set([trimmedSearch, ...prevHistory.slice(0, 5)])];\n    });\n    history.push(trimmedSearch);\n    return;\n  };\n\n  return (\n    <>\n      <Header\n        performSearch={performSearch}\n        searchHistory={searchHistory}\n        setOffset={setOffset}\n      />\n      <main className='main-content'>\n        <GifList data={data} error={error} loading={loading} ref={lastGifRef} />\n        {loading && !error && <NoGifs message='Loading...' />}\n        {error && <NoGifs message={`Error! ${errorMessage}`} />}\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename='/Infinite-Gifs'>\n    <Route path='/:search?' component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}